{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reset","setState","sortByLength","LENGTH","sortByAlpabet","ALPABET","reverse","this","visibleGoods","goods","sort","g1","g2","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","good","uuidv4","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,gHAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,MAAQ,WACN,EAAKC,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QATzB,EAaEG,aAAe,WACb,EAAKD,SAAS,CAAEH,SAAUL,EAASU,UAdvC,EAiBEC,cAAgB,WACd,EAAKH,SAAS,CAAEH,SAAUL,EAASY,WAlBvC,EAqBEC,QAAU,WACR,EAAKL,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAvBzB,4CA2BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAEZW,EA/DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GAqBzB,OAnBKhB,EAASM,MACZS,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAQd,GACN,KAAKL,EAASY,QACZ,OAAOM,EAAGE,cAAcD,GAE1B,KAAKnB,EAASU,OACZ,OAAOQ,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAKXjB,GACFW,EAAaF,UAGRE,EAsCgBO,CACnBrB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaL,EAASY,UAEtCc,QAASZ,KAAKH,cANhB,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaL,EAASU,SAEtCgB,QAASZ,KAAKL,aANhB,4BAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAASZ,KAAKD,QANhB,qBAWER,GAAYD,EAEV,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASZ,KAAKP,MAHhB,mBAOE,MAGR,6BACE,6BACGQ,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAmCA,GAAXC,6BAtFtC,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.abeb7382.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (!SortType.NONE) {\n    visibleGoods.sort((g1, g2) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return g1.localeCompare(g2);\n\n        case SortType.LENGTH:\n          return g1.length - g2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortByAlpabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={this.sortByAlpabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType || isReversed)\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            ) : ''}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li data-cy=\"Good\" key={uuidv4()}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}